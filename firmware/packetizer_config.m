
function packetizer_config(this_block)

  % Revision History:
  %
  %   26-Jan-2015  (15:05 hours):
  %     Original code was machine generated by Xilinx's System Generator after parsing
  %     /media/psf/Data/Code/MCA Spectrometer/packetizer.vhd
  %
  %

  this_block.setTopLevelLanguage('VHDL');

  this_block.setEntityName('packetizer');

  % System Generator has to assume that your entity  has a combinational feed through; 
  %   if it  doesn't, then comment out the following line:
  this_block.tagAsCombinational;


  this_block.addSimulinkOutport('reset');
  this_block.addSimulinkOutport('tx_data');
  this_block.addSimulinkOutport('tx_valid');
  this_block.addSimulinkOutport('tx_eof');

  reset_port = this_block.port('reset');
  reset_port.setType('UFix_1_0');
  reset_port.useHDLVector(false);
  tx_valid_port = this_block.port('tx_valid');
  tx_valid_port.setType('UFix_1_0');
  tx_valid_port.useHDLVector(false);
  tx_eof_port = this_block.port('tx_eof');
  tx_eof_port.setType('UFix_1_0');
  tx_eof_port.useHDLVector(false);
  tx_data_port = this_block.port('tx_data');
  tx_data_port.setType('UFix_64_0');
  tx_data_port.useHDLVector(true);
  

  % (!) Port 'tx_data' appeared to have dynamic type in the HDL
  % --- you must add an appropriate type setting for this port

  % Since the block has no inputs,  assuming output runs at system rate:
  outputRate = 1; 
  this_block.addClkCEPair('clk','ce',outputRate); 
  % (!) You may wish to modify this behavior.
  %     It is possible to create a black box from which the
  %     output rate is set from the block parameterization GUI;
  %     consult the System Generator documentation for details.
  for i = 1:this_block.numSimulinkOutports 
     this_block.outport(i).setRate(outputRate); 
  end 
    % (!) Set the inout port rate to be the same as the first input 
    %     rate. Change the following code if this is untrue.
    uniqueInputRates = unique(this_block.getInputRates);

  % (!) Custimize the following generic settings as appropriate. If any settings depend
  %      on input types, make the settings in the "inputTypesKnown" code block.
  %      The addGeneric function takes  3 parameters, generic name, type and constant value.
  %      Supported types are boolean, real, integer and string.
  this_block.addGeneric('count_sw','STD_LOGIC','''1''');

  % Add addtional source files as needed.
  %  |-------------
  %  | Add files in the order in which they should be compiled.
  %  | If two files "a.vhd" and "b.vhd" contain the entities
  %  | entity_a and entity_b, and entity_a contains a
  %  | component of type entity_b, the correct sequence of
  %  | addFile() calls would be:
  %  |    this_block.addFile('b.vhd');
  %  |    this_block.addFile('a.vhd');
  %  |-------------

  
  this_block.addFile('counter.vhd');
  this_block.addFile('heap_generator.vhd');
  this_block.addFile('running_generator.vhd');
  this_block.addFile('constant_generator.vhd');
  this_block.addFile('packetizer.vhd');
  
  
return;


